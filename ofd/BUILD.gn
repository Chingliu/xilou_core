# Copyright 2018 The PDFium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/freetype/freetype.gni")
import("../pdfium.gni")
import("../testing/test.gni")

config("fxge_warnings") {
  defines = [ "FPDF_IMPLEMENTATION" ]
  visibility = [ ":*" ]
  if (is_clang) {
    cflags = [
      # http://code.google.com/p/pdfium/issues/detail?id=188
      "-Wno-switch",
    ]
  }
}

source_set("ofd") {
  sources = [
    "constants/page_object.cpp",
    "constants/page_object.h",
    "cofd_common.h",
    "cofd_ofdxml.h",
    "cofd_ofdxml.cpp",
    "cofd_document.cpp",
    "cofd_document.h",
    "cofd_package.cpp",
    "cofd_package.h",
    "cofd_pageobjectholder.h",
    "cofd_pageobjectholder.cpp",
    "cofd_parse_pathobj.cpp",
    "cofd_parse_textobj.cpp",
    "cofd_parse_imageobj.cpp",
    "cofd_parse_compositeobj.cpp",
    "cofd_parse_shadingobj.cpp",
    "cofd_page.h",
    "cofd_page.cpp",
    "cofd_page_annot.h",
    "cofd_page_annot.cpp",
    "cofd_zipentry.cpp",
    "cofd_zipentry.h",
    "cofd_textobj.cpp",
    "cofd_textobj.h",
    "cofd_util.h",
    "cofd_util.cpp",
    "FIIO_Mem.h",
    "FIIO_Mem.cpp",
    "cofd_signature.h",
    "cofd_signature.cpp",
    "cofd_page_signature.h",
    "cofd_page_signature.cpp",
    "render/charposlist.cpp",
    "render/charposlist.h",
    "render/cofd_devicebuffer.cpp",
    "render/cofd_devicebuffer.h",
    "render/cofd_textrenderer.cpp",
    "render/cofd_textrenderer.h",
    "render/cofd_scaledrenderbuffer.h",
    "render/cofd_scaledrenderbuffer.cpp",
    "render/cofd_progressiverenderer.h",
    "render/cofd_progressiverenderer.cpp",
    "render/cofd_pagerendercontext.h",
    "render/cofd_pagerendercontext.cpp",
    "render/cofd_rendercontext.h",
    "render/cofd_rendercontext.cpp",
    "render/cofd_renderstatus.h",
    "render/cofd_renderstatus.cpp",
    "render/cofd_renderpage.h",
    "render/cofd_renderpage.cpp",
    "render/cofd_rendershading.h",
    "render/cofd_rendershading.cpp",
    "render/cofd_imagerenderer.h",
    "render/cofd_imagerenderer.cpp",
    "render/cofd_imageloader.h",
    "render/cofd_imageloader.cpp",
    "oes/oes_util.h",
    "oes/oes_util.cpp",
    "oes/oes_loader.h",
    "oes/oes_loader.cpp",
  ]

  configs += [
    ":fxge_warnings",
    "../:pdfium_strict_config",
  ]

  deps = [ "../core/fxcrt",
            "../core/fxcodec",
            "../xfa/fxfa",
            "../fxjs",
            "../fxjs:gc",
            "../third_party:pdfium_base" ,
            "../third_party/zip:kuba_zlib"
  ]

  if (is_component_build || use_system_freetype) {
    # ft_adobe_glyph_list is not exported from the Freetype shared library so we
    # need it defined in component builds and builds using system freetype.
    defines = [ "DEFINE_PS_TABLES_DATA" ]
  }

  visibility = [ "../*" ]
}

pdfium_unittest_source_set("unittests") {
  sources = [ "cofd_zipentry_unittest.cpp",
                "cofd_ofdxml_unittest.cpp",
                "cofd_document_unittest.cpp",
                "cofd_package_unittest.cpp"
                
                ]
  deps = [ ":ofd" ]
  pdfium_root_dir = "../"
}

pdfium_embeddertest_source_set("embeddertests") {
  sources = [ "cofd_ofd2pdf_unittest.cpp" ]
  deps = [ ":ofd" ]
  pdfium_root_dir = "../"
}